/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 *  NGI-RNAseq Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

params {
  outdir = './results'
  igenomes_base = ''
  clusterOptions = false

  version = '1.4' //Pipeline version
  nf_required_version = '0.27.6' //Minimum version of Nextflow required
  container = 'scilifelab/ngi-rnaseq:1.4' // Container slug. Stable releases should specify release tag!
}

profiles {
  standard {
    includeConfig 'conf/base.config'
    includeConfig 'conf/igenomes.config'
  }
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

params.outdir = './results'
timeline {
  enabled = true
  file = "${params.outdir}/NGI-RNAseq_timeline.html"
}
trace {
  enabled = true
  file = "${params.outdir}/NGI-RNAseq_trace.txt"
}

manifest {
  homePage = 'https://github.com/SciLifeLab/NGI-RNAseq'
  description = 'Nextflow RNA-Seq Best Practice analysis pipeline, used at the SciLifeLab National Genomics Infrastructure.'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    if(obj.compareTo(params.max_memory) == 1)
      return params.max_memory
    else
      return obj
  } else if(type == 'time'){
    if(obj.compareTo(params.max_time) == 1)
      return params.max_time
    else
      return obj
  } else if(type == 'cpus'){
    return Math.min( obj, params.max_cpus )
  }
}
